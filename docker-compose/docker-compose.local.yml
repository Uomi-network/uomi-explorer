version: '3.9'

# This is a local development docker-compose configuration
# It uses local paths for volumes instead of remote paths

services:
  redis-db:
    extends:
      file: ./services/redis-local.yml
      service: redis-db

  db-init:
    extends:
      file: ./services/db.local.yml
      service: db-init

  db:
    depends_on:
      db-init:
        condition: service_completed_successfully
    extends:
      file: ./services/db.local.yml
      service: db

  backend:
    depends_on:
      - db
      - redis-db
    extends:
      file: ./services/backend.yml
      service: backend
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
      args:
        RELEASE_VERSION: 8.1.0
    links:
      - db:database
    environment:
        ETHEREUM_JSONRPC_HTTP_URL: https://finney.uomi.ai/
        ETHEREUM_JSONRPC_TRACE_URL: https://finney.uomi.ai/
        ETHEREUM_JSONRPC_WS_URL: wss://finney.uomi.ai/
        CHAIN_ID: '4386'

  nft_media_handler:
    depends_on:
      - backend
    extends:
      file: ./services/nft_media_handler.yml
      service: nft_media_handler
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
      args:
        RELEASE_VERSION: 8.1.0

  visualizer:
    extends:
      file: ./services/visualizer.yml
      service: visualizer

  sig-provider:
    extends:
      file: ./services/sig-provider.yml
      service: sig-provider

  frontend:
    depends_on:
      - backend
    extends:
      file: ./services/frontend.yml
      service: frontend

  stats-db-init:
    extends:
      file: ./services/stats.local.yml
      service: stats-db-init

  stats-db:
    depends_on:
      stats-db-init:
        condition: service_completed_successfully
    extends:
      file: ./services/stats.local.yml
      service: stats-db

  stats:
    depends_on:
      - stats-db
      - backend
    extends:
      file: ./services/stats.local.yml
      service: stats

  user-ops-indexer:
    depends_on:
      - db
      - backend
    extends:
      file: ./services/user-ops-indexer.yml
      service: user-ops-indexer
  admin-backend:
    depends_on:
      - db
    extends:
      file: ./services/admin-backend.yml
      service: admin-backend

  admin-frontend:
    depends_on:
      - admin-backend
    image: node:18-alpine
    working_dir: /app
    volumes:
      - ../admin-frontend:/app
    command: sh -c "npm install && npm run dev"
    container_name: 'admin-frontend'
    ports:
      - "3010:3010"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:4010
      - WATCHPACK_POLLING=true
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3010"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # proxy:

  # proxy:
  #   depends_on:
  #     - backend
  #     - frontend
  #     - stats
  #   extends:
  #     file: ./services/nginx.yml
  #     service: proxy
